{
  True => true;
  False => false;
  (Equal ((Num (1), Minus ((Num (0), Num (1)))))) => false;
  (Imply (Imply (True, False), True)) => true;
  (Equal (Num 1, Plus (Num 1, Num 2))) => false;
  (OrElse (False, True)) => true;
  (AndAlso (True, Not True)) => false;
  (Equal (Plus (Num 0, Num 1), Num 1)) => true;
  (Imply (Not False, AndAlso (True,False))) => false;
  (Equal (Minus (Num 5,Num 2),Num 3)) => true;
  (Not (Not (Not (Not (Imply (True, True)))))) => true;
  (Not (Imply (AndAlso (False, True), OrElse (False, False)))) => false;
  (Equal (Plus (Minus (Num 4, Num 5), Minus (Num 1, Num (-1))), Plus (Minus (Num 3, Num (-5)), Plus (Num 4, Num 5)))) => false;
  (AndAlso (AndAlso(True, True), AndAlso (Not (AndAlso (True, False)), Not (OrElse (False, False))))) => true;
  (Imply (Imply (Equal (Num 3, Minus (Num 10, Num 1)), AndAlso (True, True)), Imply (OrElse (True, False), Not (True)))) => false;
  (Equal (Plus (Plus(Num 1,Num 2), Plus (Num 2, Minus (Num 3, Num 5))), Plus (Minus (Num 2, Plus (Num 3, Num 4)), Plus (Num 2, Num 3)))) => false;
  (Imply (AndAlso (True, True), True)) => true;
  (Equal (Plus (Num 1, Num 2), Num 3)) => true;
  (Imply (Equal (Plus (Num 2, Minus (Num 3, Num 5)), Num 0), Equal (Plus (Num 2, Minus (Num 3, Num 5)), Num 1))) => false;
  (Not (Not (Imply (True, (Imply (Imply (Equal (Num 3, Minus (Num 10, Num 1)), AndAlso (True, True)), Imply (OrElse (True, False), Not (True)))))))) => false;
}