{
  (fun x y z -> x * y + z); []; []; 0 => 0;
  (fun x y z -> x + y + z); [1]; [2]; 3 => 6;
  (fun x y z -> x * y * z); [1; 2 ;3]; [1; 2; 3]; 1 => 36;
  (fun x y z -> z); [1; 2; 3]; [1; 2; 3]; 77 => 77;
  (fun x y z -> 100); [true; false]; [false; false]; 0 => 100;
  (fun x y z -> x * y + z); [1; 2; 3]; [0; 1; 2]; 0 => 8;
  (fun x y z -> x && y && z); [true; true]; [false; true]; false => false;
  (fun x y z -> (x > y) && z); [3; 4; 5]; [2; 3; 1]; true => true;
  (fun (a, b) (c, d) z -> (a+b) + (c+d) + z); [(1, 1); (0, 1)]; [(2, 2); (2, 0)]; 0 => 9;
  (fun (a, b) (c, d) (z1, z2) -> (a+b+z1, c+d+z2)); [(1, 1); (0, 1)]; [(2, 2); (2, 0)]; (0, 0) => (3, 6);
  (fun x y z -> if x > y then x + z else y + z); [1; 2; 3]; [3; 2; 1]; 0 => 8;
  (fun x y z -> if y then z+x else z-x); [1; 1; 1; 1]; [true; true; false; true]; 0 => 2;
  (fun (a, b) y z -> if a+b > y then z+y else z-y); [(1, 3); (-1, 2); (0, 0)]; [5; 0; 7]; 0 => -12;
  (fun l1 l2 z -> l1@l2@z); [[]; [1; 2]; [1; 2; 3]]; [[]; []; []]; [] => [1; 2; 3; 1; 2];
  (fun l1 l2 z -> reduce (fun x y z -> x*y+z) l1 l2 z); [[]; []]; [[]; []]; 0 => 0;
  (fun l1 l2 z -> reduce (fun x y z -> x+y+z) l1 l2 z); [[1; 2; 3]; [1; 2; 3]]; [[0; 0; 0]; [-1; 2; 3]]; 0 => 16;
  (fun (l1, l2) b z -> if b then reduce (fun x y z -> x + y + z) l1 l2 z else z); [([1; 2; 3], [0; 0; 0]); ([3; 4; 5], [1; 2; 3])]; [true; false]; 0 => 6;
  (fun p q r -> p q r); [(fun a b -> a + b);(fun a b -> a + b)]; [3; 4]; 1 => 8;
	(fun p q r -> p q r); [(fun a b -> a + b);(fun a b -> a - b)]; [3; 4]; 1 => 0;
	(fun p q r -> p q r); [(fun a b -> a + b);(fun a b -> a * b)]; [3; 4]; 1 => 16;
}